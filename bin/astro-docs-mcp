#!/bin/bash

# Launcher script for Astro Docs MCP
# This script handles Node.js version detection and proper stderr redirection

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PROJECT_DIR="$( cd "$SCRIPT_DIR/.." && pwd )"
BUILD_FILE="$PROJECT_DIR/build/index.js"

# Redirect ALL debug output to stderr
exec 3>&1  # Save original stdout
exec 1>&2  # Redirect stdout to stderr for all debug messages

echo "Starting Astro Docs MCP server..."

# Verify the build file exists
if [ ! -f "$BUILD_FILE" ]; then
  echo "ERROR: Main index.js file not found at $BUILD_FILE"
  echo "Please run 'npm run build' first"
  exit 1
fi

# Detect Node.js version
if command -v node >/dev/null 2>&1; then
  NODE_VERSION=$(node --version)
  MAJOR_VERSION=$(echo "$NODE_VERSION" | cut -c2- | cut -d. -f1)
  echo "Found Node.js version: $NODE_VERSION (major: $MAJOR_VERSION)"
else
  echo "Node.js not found in PATH"
  MAJOR_VERSION=0
fi

# Try to use NVM if needed
if [[ $MAJOR_VERSION -lt 16 ]]; then
  export NVM_DIR="$HOME/.nvm"
  if [ -s "$NVM_DIR/nvm.sh" ]; then
    source "$NVM_DIR/nvm.sh"
    if nvm ls 16 >/dev/null 2>&1; then
      nvm use 16 >/dev/null 2>&1
      NODE_VERSION=$(node --version)
      MAJOR_VERSION=$(echo "$NODE_VERSION" | cut -c2- | cut -d. -f1)
      echo "Node.js version after NVM: $NODE_VERSION"
    fi
  fi
fi

# Restore stdout for the actual server process
exec 1>&3

# Use appropriate Node.js flags based on version
if [[ $MAJOR_VERSION -ge 16 ]]; then
  echo "Using Node.js $MAJOR_VERSION" >&2
  exec node --no-warnings "$BUILD_FILE"
else
  echo "ERROR: Node.js 16+ is required" >&2
  exit 1
fi